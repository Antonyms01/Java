package pack;

//package pack;
//
//
//import java.io.IOException;
//
//public class Demo
//{
//	void disp3()throws IOException
//	{
//		int num=20;
//		if(num>10)
//		{
//			throw new IOException();
//		}
//	}
//	void disp2()throws IOException
//	{
//		disp3();
//	}
//	void disp1()throws IOException
//	{
//		disp2();
//	}
//	public static void main(String args[]) throws IOException
//	{
//		Demo j=new Demo();
//		j.disp1(); // compilation error : add throws or try_catch
//	}
//}





//1) define a functional interface "First" with an abstract method "void disp1()" , default method
//"void disp2()" and a static method "void disp3()"
//
//inside main function using lambda expression invoke "disp1()" and "disp2()" methods.
//also invoke "disp3()" method inside main.



interface First

{
	void disp1();
	
	default void disp2()
	{
		System.out.println("In Default disp2");
	}
	
	static void disp3()
	{
		System.out.println("In static disp3");
	}
}

public class Demo
{
	First ref=()->System.out.println(disp1());
}